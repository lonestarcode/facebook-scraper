version: '3.8'

services:
  # Core infrastructure
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: marketplace
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Microservices
  scraper-service:
    build:
      context: ../../services/scraper
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      PYTHONPATH: /app
    depends_on:
      - kafka
      - redis
    volumes:
      - ../../services/scraper:/app
      - ../../shared:/app/shared

  api-service:
    build:
      context: ../../services/api
    ports:
      - "8000:8000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      DATABASE_URL: postgresql://user:password@postgres:5432/marketplace
      REDIS_URL: redis://redis:6379/0
      PYTHONPATH: /app
    depends_on:
      - kafka
      - postgres
      - redis
    volumes:
      - ../../services/api:/app
      - ../../shared:/app/shared

  processor-service:
    build:
      context: ../../services/processor
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      DATABASE_URL: postgresql://user:password@postgres:5432/marketplace
      PYTHONPATH: /app
    depends_on:
      - kafka
      - postgres
    volumes:
      - ../../services/processor:/app
      - ../../shared:/app/shared

  notifications-service:
    build:
      context: ../../services/notifications
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      DATABASE_URL: postgresql://user:password@postgres:5432/marketplace
      REDIS_URL: redis://redis:6379/1
      PYTHONPATH: /app
    depends_on:
      - kafka
      - postgres
      - redis
    volumes:
      - ../../services/notifications:/app
      - ../../shared:/app/shared

  # Monitoring
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  # Development tools
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

volumes:
  zookeeper_data:
  kafka_data:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: 